package elements

import (
	"fmt"
	"github.com/shirou/gopsutil/v4/cpu"
	"os/exec"
	"regexp"
	"strings"
	"sync/atomic"
	"time"
)

templ Status(ffmpegBinary string) {
	<div
		id="status"
		hx-get="/elements/status"
		hx-trigger="load, every 3s"
		hx-swap="outerHTML"
	>
		<div class="flex items-center space-x-4">
			<div class="text-sm text-gray-600 dark:text-gray-400 font-mono">
				{ getFFmpegVersion(ffmpegBinary) }
			</div>
			<div class="text-sm text-gray-600 dark:text-gray-400 font-mono">
				CPU: { fmt.Sprintf("%.1f%%", getCPUUsage()) }
			</div>
		</div>
	</div>
}

func getFFmpegVersion(ffmpegBinary string) string {
	if ffmpegBinary == "" {
		return "FFmpeg: loading"
	}

	cmd := exec.Command(ffmpegBinary, "-version")
	output, err := cmd.Output()
	if err != nil {
		return "FFmpeg: unavailable"
	}

	// Extract version from the first line
	firstLine := strings.Split(string(output), "\n")[0]

	// Use regex to extract the version number
	re := regexp.MustCompile(`ffmpeg version\s+([\w\d\.-]+)`)
	matches := re.FindStringSubmatch(firstLine)

	if len(matches) >= 2 {
		return "FFmpeg: v" + matches[1]
	}

	return "FFmpeg installed"
}

var lastCPUCall atomic.Pointer[time.Time]

func getCPUUsage() float64 {
	vals, err := cpu.Percent(time.Second, false)
	if err != nil {
		return 0.0
	}
	return vals[0]
}
