package pages

import (
	"github.com/royalcat/easy-transcoder/internal/transcoding"
	"github.com/royalcat/easy-transcoder/templui/components/button"
	"github.com/royalcat/easy-transcoder/templui/components/dialog"
	"github.com/royalcat/easy-transcoder/templui/components/label"
	"github.com/royalcat/easy-transcoder/ui/elements"
	"github.com/royalcat/easy-transcoder/ui/layouts"
)

templ Root(profiles []transcoding.Profile, queue []elements.TaskState) {
	@layouts.BaseLayout() {
		<div class="flex flex-col gap-10">
			@createTaskModalButton(profiles, queue)
			<div id="queue" hx-get="/elements/queue" hx-trigger="load, every 2s"></div>
		</div>
	}
}

const dialogId = "create-task-dialog"

templ createTaskModalButton(profiles []transcoding.Profile, queue []elements.TaskState) {
	@dialog.Trigger(dialog.TriggerProps{
		For: dialogId,
		// Class: "w-24",
	}) {
		@button.Button(button.Props{
			// FullWidth: true,
		}) {
			Create Task
		}
	}
	@dialog.Content(dialog.ContentProps{
		ID:    dialogId,
		Class: "min-w-3/4 max-w-2xl",
	}) {
		<form hx-post="/submit/task" hx-swap="none">
			@dialog.Header() {
				@dialog.Title() {
					Create Task
				}
			}
			<div class="flex flex-col gap-2">
				@label.Label(label.Props{
					Class: "text-lg font-semibold",
				}) {
					Profile
				}
				@elements.ProfileSelector(profiles)
			</div>
			<div class="flex flex-col gap-2">
				@label.Label(label.Props{
					Class: "text-lg font-semibold",
				}) {
					File
				}
				@elements.FilePicker("./media", "name_asc", queue)
			</div>
			@dialog.Footer(dialog.FooterProps{
				Class: "flex flex-row-reverse",
			}) {
				<div class="flex gap-4">
					@dialog.Close(dialog.CloseProps{
						ID: "create-task",
					}) {
						@button.Button(button.Props{
							Variant: button.VariantSecondary,
							Type:    "button",
						}) {
							Cancel
						}
					}
					@dialog.Close(dialog.CloseProps{
						For: dialogId,
					}) {
						@button.Button(button.Props{
							Type: "submit",
						}) {
							Submit
						}
					}
				</div>
			}
		</form>
	}
}
