package pages

import (
	"fmt"
	"github.com/royalcat/easy-transcoder/templui/components/button"
	"github.com/royalcat/easy-transcoder/templui/components/icon"
	"github.com/royalcat/easy-transcoder/templui/components/separator"
	"github.com/royalcat/easy-transcoder/ui/elements"
	"github.com/royalcat/easy-transcoder/ui/layouts"
	"net/url"
	"strings"
)

templ Resolver(ffmpegBinary string, task elements.TaskState) {
	@layouts.BaseLayout(ffmpegBinary) {
		<div class="flex flex-col gap-10">
			@resolveMenu(task.ID, task.InputFile, task.TempFile)
		</div>
	}
}

templ resolveMenu(taskId, inputFile, tempFile string) {
	<form hx-post="/submit/resolve" hx-indicator="#spinner" hx-swap="innerHTML">
		<input type="hidden" name="taskid" value={ taskId }/>
		<div class="flex flex-row flex-nowrap gap-4">
			<div id="input-fileinfo" hx-get={ "/elements/fileinfo?path=" + url.QueryEscape(inputFile) } hx-trigger="load" hx-target="#input-fileinfo" hx-swap="innerHTML">
				@elements.FileInfo(inputFile)
			</div>
			@separator.Separator(separator.Props{
				Orientation: separator.OrientationVertical,
			})
			<div id="temp-fileinfo" hx-get={ "/elements/fileinfo?path=" + url.QueryEscape(tempFile) } hx-trigger="load" hx-target="#temp-fileinfo" hx-swap="innerHTML">
				@elements.FileInfo(tempFile)
			</div>
		</div>
		<div class="my-6 p-4 border rounded bg-card">
			<div class="text-lg font-bold mb-3 text-center">Video Quality Metrics</div>
			<div class="flex flex-row gap-4">
				@calculateScoreButton("vmaf", inputFile, tempFile)
				@calculateScoreButton("psnr", inputFile, tempFile)
				@calculateScoreButton("ssim", inputFile, tempFile)
			</div>
		</div>
		<div class="flex gap-2">
			@button.Button(button.Props{
				Type: "submit",
				Attributes: templ.Attributes{
					"name":  "replace",
					"value": "false",
				},
			}) {
				Reject
			}
			@button.Button(button.Props{
				Type: "submit",
				Attributes: templ.Attributes{
					"name":  "replace",
					"value": "true",
				},
			}) {
				Replace
			}
		</div>
	</form>
	<span id="spinner" class="hidden">
		@icon.LoaderCircle(icon.Props{
			Size: 16,
		})
	</span>
}

templ calculateScoreButton(score, inputFile, tempFile string) {
	@button.Button(button.Props{
		Type: "button",
		Attributes: templ.Attributes{
			"id":              score + "-score",
			"hx-get":          "/metrics/" + score + "?reference=" + url.QueryEscape(inputFile) + "&distorted=" + url.QueryEscape(tempFile),
			"hx-disabled-elt": "this",
			"hx-indicator":    "#" + score + "-spinner",
			"hx-swap":         "outerHTML",
		},
	}) {
		<div class="flex items-center gap-2">
			<span>{ strings.ToUpper(score) }</span>
			@icon.LoaderCircle(icon.Props{
				// ID:    score + "-spinner",
				Size:  16,
				Color: "text-primary-foreground",
				Class: "htmx-indicator",
			})
		</div>
	}
}

templ VMafScore(score float64) {
	<div class="flex flex-col items-center border rounded p-3">
		<div class="font-semibold">VMAF</div>
		<div class="text-lg">{ fmt.Sprintf("%.2f", score) }</div>
		<div class="text-xs text-muted-foreground">
			<p>0-100 scale</p>
			<p>>90: visually identical</p>
		</div>
	</div>
}

templ PsnrScore(score float64) {
	<div class="flex flex-col items-center border rounded p-3">
		<div class="font-semibold">PSNR</div>
		<div class="text-lg">{ fmt.Sprintf("%.2f", score) }</div>
		<div class="text-xs text-muted-foreground">
			<p>Higher is better</p>
			<p>>50 dB: excellent</p>
		</div>
	</div>
}

templ SsimScore(score float64) {
	<div class="flex flex-col items-center border rounded p-3">
		<div class="font-semibold">SSIM</div>
		<div class="text-lg">{ fmt.Sprintf("%.4f", score) }</div>
		<div class="text-xs text-muted-foreground">
			<p>0-1 scale</p>
			<p>>0.95: high quality</p>
		</div>
	</div>
}
